name: Hello World (Multiplatform)

on:
  push:
    branches:
      - main
      - v*-branch
  pull_request:
    branches:
      - main
      - v*-branch

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  twister-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12

      - name: Checkout sources
        uses: nrfconnect/action-checkout-west-update@main
        with:
          git-fetch-depth: 0

#      - name: Setup Zephyr project
#        uses: zephyrproject-rtos/action-zephyr-setup@b2453c72966ee67b1433be22b250348d48283286 # v1.0.7
#        with:
#          app-path: ncs/zephyr
#          toolchains: aarch64-zephyr-elf:arc-zephyr-elf:arc64-zephyr-elf:arm-zephyr-eabi:mips-zephyr-elf:riscv64-zephyr-elf:sparc-zephyr-elf:x86_64-zephyr-elf:xtensa-dc233c_zephyr-elf:xtensa-sample_controller32_zephyr-elf:rx-zephyr-elf
            #wget -q https://files.nordicsemi.com/artifactory/swtools/external/nrfutil/executables/$NRFUTIL_LOCATION

      - name: Install nrfutil and toolchain manager
        working-directory: ncs
        run: |
            if [ "${{ runner.os }}" = "Windows" ]; then
              NRFUTIL_LOCATION="x86_64-pc-windows-msvc/nrfutil.exe"
              curl -sSLO "https://files.nordicsemi.com/artifactory/swtools/external/nrfutil/executables/$NRFUTIL_LOCATION"
              ./nrfutil.exe install toolchain-manager
            elif [ "${{ runner.os }}" = "macOS" ]; then
              NRFUTIL_LOCATION="universal-apple-darwin/nrfutil"
              wget -q "https://files.nordicsemi.com/artifactory/swtools/external/nrfutil/executables/$NRFUTIL_LOCATION"
              sudo chmod +x nrfutil
              ./nrfutil install toolchain-manager
            elif [ "${{ runner.os }}" = "Linux" ]; then
              NRFUTIL_LOCATION="x86_64-unknown-linux-gnu/nrfutil"
              curl -sSLO "https://files.nordicsemi.com/artifactory/swtools/external/nrfutil/executables/$NRFUTIL_LOCATION"
              chmod +x nrfutil
              ./nrfutil install toolchain-manager
            fi
        shell: bash

      - name: Find proper toolchain bundle
        working-directory: ncs
        id: set-tb-id
        run: |
            if [ "${{ runner.os }}" = "macOS" ]; then
              echo "TOOLCHAIN_BUNDLE_NAME=ncs-toolchain-aarch64-macos-$(./nrf/scripts/print_toolchain_checksum.sh).tar.gz" >> $GITHUB_OUTPUT
            elif [ "${{ runner.os }}" = "Windows" ]; then
              echo "TOOLCHAIN_BUNDLE_NAME=ncs-toolchain-x86_64-windows-$(powershell.exe -NoProfile -Command ./nrf/scripts/print_toolchain_checksum.ps1).tar.gz" >> $GITHUB_OUTPUT
            elif [ "${{ runner.os }}" = "Linux" ]; then
              echo "TOOLCHAIN_BUNDLE_NAME=ncs-toolchain-x86_64-linux-$(./nrf/scripts/print_toolchain_checksum.sh).tar.gz" >> $GITHUB_OUTPUT
            fi
        shell: bash

#      - name: Restore toolchain bundle from cache
#        id: restore-cached-tb
#        uses: actions/cache/restore@v4
#        with:
#          path: ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}
#          key: ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}

      - name: Download toolchain bundle if not cached
        working-directory: ncs
        #if: steps.restore-cached-tb.outputs.cache-hit != 'true'
        run: curl -SLO https://files.nordicsemi.com/artifactory/NCS/external/bundles/v3/${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}

#      - name: Save toolchain bundle to cache
#        if: steps.restore-cached-tb.outputs.cache-hit != 'true'
#        uses: actions/cache/save@v4
#        with:
#          path: ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}
#          key: ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}

      - name: Install proper toolchain bundle
        working-directory: ncs
        run: |
            if [ "${{ runner.os }}" = "Windows" ]; then
              ./nrfutil.exe toolchain-manager install --toolchain-bundle ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}
            elif [ "${{ runner.os }}" = "macOS" ]; then
              sudo ./nrfutil toolchain-manager install --toolchain-bundle ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}
            else
              ./nrfutil toolchain-manager install --toolchain-bundle ${{steps.set-tb-id.outputs.TOOLCHAIN_BUNDLE_NAME}}
            fi
        shell: bash

      - name: Build firmware
        working-directory: ncs/zephyr
        shell: bash
        run: |
          pip3 install anytree junitparser natsort ply psutil pyelftools pytest
          if [ "${{ runner.os }}" = "macOS" ]; then
            EXTRA_TWISTER_FLAGS="-P native_sim --build-only"
          elif [ "${{ runner.os }}" = "Windows" ]; then
            EXTRA_TWISTER_FLAGS="-P native_sim --short-build-path -O/tmp/twister-out"
          fi
          ./scripts/twister --runtime-artifact-cleanup --force-color --inline-logs -T samples/hello_world -T samples/cpp/hello_world -v $EXTRA_TWISTER_FLAGS

#      - name: Upload artifacts
#        if: failure()
#        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
#        with:
#          if-no-files-found: ignore
#          path:
#            zephyr/twister-out/*/samples/hello_world/sample.basic.helloworld/build.log
#            zephyr/twister-out/*/samples/cpp/hello_world/sample.cpp.helloworld/build.log

